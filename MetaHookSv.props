<?xml version="1.0" encoding="utf-8"?> 
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <MetaHookBaseDir>$(SolutionDir)thirdparty\MetaHookSv\</MetaHookBaseDir>
  </PropertyGroup>
  
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(MetaHookBaseDir)tools\global.props" Condition="exists('$(MetaHookBaseDir)tools\global.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_template.props" Condition="!exists('$(MetaHookBaseDir)tools\global.props') and exists('$(MetaHookBaseDir)tools\global_template.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_common.props" />
    <Import Project="$(MetaHookBaseDir)thirdparty\VC-LTL\VC-LTL helper for Visual Studio.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_AVX2|Win32'" Label="PropertySheets">
    <Import Project="$(MetaHookBaseDir)tools\global.props" Condition="exists('$(MetaHookBaseDir)tools\global.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_template.props" Condition="!exists('$(MetaHookBaseDir)tools\global.props') and exists('$(MetaHookBaseDir)tools\global_template.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_common.props" />
    <Import Project="$(MetaHookBaseDir)thirdparty\VC-LTL\VC-LTL helper for Visual Studio.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(MetaHookBaseDir)tools\global.props" Condition="exists('$(MetaHookBaseDir)tools\global.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_template.props" Condition="!exists('$(MetaHookBaseDir)tools\global.props') and exists('$(MetaHookBaseDir)tools\global_template.props')" />
    <Import Project="$(MetaHookBaseDir)tools\global_common.props" />
    <Import Project="$(MetaHookBaseDir)tools\global_common.props" />
    <Import Project="$(MetaHookBaseDir)thirdparty\VC-LTL\VC-LTL helper for Visual Studio.props" />
  </ImportGroup>

  <PropertyGroup>

    <StaticZLibIncludeDirectory>$(SolutionDir)thirdparty\zlib-win-build</StaticZLibIncludeDirectory>
    <StaticZLibLibrariesDirectory>$(SolutionDir)thirdparty\zlib-win-build\build-VS2022-MT\$(Configuration)</StaticZLibLibrariesDirectory>
    <StaticZLibLibraries>libz-static.lib</StaticZLibLibraries>
    <StaticZLibCheckRequirements>if not exist "$(ZLibLibrariesDirectory)\$(ZLibLibraries)" call "$(SolutionDir)scripts\build-zlib-$(PlatformTarget)-$(Configuration).bat"</StaticZLibCheckRequirements>

    <LibIconvIncludeDirectory>$(SolutionDir)thirdparty\libiconv-win-build\include</LibIconvIncludeDirectory>
    <LibIconvLibrariesDirectory>$(SolutionDir)thirdparty\libiconv-win-build\build-VS2022-MT\$(Configuration)</LibIconvLibrariesDirectory>
    <LibIconvLibraries>libiconv-static.lib</LibIconvLibraries>
    <LibIconvCheckRequirements>if not exist "$(LibIconvLibrariesDirectory)\$(LibIconvLibraries)" call "$(SolutionDir)scripts\build-libiconv-$(PlatformTarget)-$(Configuration).bat"</LibIconvCheckRequirements>

    <LibLZMAIncludeDirectory>$(SolutionDir)thirdparty\xz-win-build</LibLZMAIncludeDirectory>
    <LibLZMALibrariesDirectory>$(SolutionDir)thirdparty\xz-win-build\src\liblzma\api</LibLZMALibrariesDirectory>
    <LibLZMALibraries>liblzma-static.lib</LibLZMALibraries>
    <LibLZMACheckRequirements>if not exist "$(LibLZMALibrariesDirectory)\$(LibLZMALibraries)" call "$(SolutionDir)scripts\build-liblzma-$(PlatformTarget)-$(Configuration).bat"</LibLZMACheckRequirements>

    <LibXML2IncludeDirectory>$(SolutionDir)thirdparty\libxml2-win-build\include;$(SolutionDir)thirdparty\libxml2-win-build\include\libxml</LibXML2IncludeDirectory>
    <LibXML2BinaryDirectory>$(SolutionDir)thirdparty\libxml2-win-build\build-VS2022-MT\$(Configuration)</LibXML2BinaryDirectory>
    <LibXML2LibrariesDirectory>$(SolutionDir)thirdparty\libxml2-win-build\build-VS2022-MT\$(Configuration)</LibXML2LibrariesDirectory>
    <LibXML2Libraries>libxml2.lib</LibXML2Libraries>
    <LibXML2CheckRequirements>
    $(StaticZLibCheckRequirements)
    $(LibIconvCheckRequirements)
    $(LibLZMACheckRequirements)
    if not exist "$(LibXML2LibrariesDirectory)\$(LibXML2Libraries)" call "$(SolutionDir)scripts\build-libxml2-$(PlatformTarget)-$(Configuration).bat"
    </LibXML2CheckRequirements>

  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">

    <PluginPostBuildCommand3>if exist "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\plugins" if not "$(MetaHookGameDirectory)" == "" copy "$(OutDir)$(TargetName)$(TargetExt)" "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\plugins\" /y</PluginPostBuildCommand3>
    <PluginLibsPostBuildCommand3>if exist "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\dlls" if not "$(MetaHookGameDirectory)" == "" copy "$(OutDir)$(TargetName)$(TargetExt)" "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\dlls\" /y</PluginLibsPostBuildCommand3>
    <LibXML2CopyBinaries>if exist "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\dlls" if not "$(MetaHookGameDirectory)" == "" copy "$(LibXML2BinaryDirectory)\libxml2.dll" "$(MetaHookGameDirectory)$(MetaHookModName)\metahook\dlls\" /y</LibXML2CopyBinaries>

  </PropertyGroup>


  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">

    <PluginPostBuildCommand3>mkdir "$(SolutionDir)Build\svencoop\metahook\plugins"
    copy "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)Build\svencoop\metahook\plugins\" /y</PluginPostBuildCommand3>
    <PluginLibsPostBuildCommand3>mkdir "$(SolutionDir)Build\svencoop\metahook\dlls"
    copy "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)Build\svencoop\metahook\dlls\" /y</PluginLibsPostBuildCommand3>
    <LibXML2CopyBinaries>mkdir "$(SolutionDir)Build\svencoop\metahook\dlls"
    copy "$(LibXML2BinaryDirectory)\libxml2.dll" "$(SolutionDir)Build\svencoop\metahook\dlls\" /y</LibXML2CopyBinaries>
    
  </PropertyGroup>

</Project>